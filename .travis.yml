language: cpp
compiler:
  - clang
notifications:
  slack: fraunhofermevis:CNP5iT4mQADEUzpJm8VMJNoN
env:
  matrix: 
    - JULIAVERSION="juliareleases" 
before_install:
  - sudo add-apt-repository ppa:staticfloat/julia-deps -y
  - sudo add-apt-repository ppa:staticfloat/${JULIAVERSION} -y
  - sudo apt-get update -qq -y
  - sudo apt-get install libpcre3-dev julia -y
  - sudo apt-get install python-matplotlib
script:
  - julia --version
  - julia -e 'Pkg.clone("https://github.com/JuliaLang/IterativeSolvers.jl")'
  - julia -e 'Pkg.clone("https://github.com/lruthotto/KrylovMethods.jl.git")'
  - julia -e 'Pkg.init(); run(`ln -s $(pwd()) $(Pkg.dir("DeformableRegistration"))`); Pkg.pin("DeformableRegistration"); Pkg.resolve()'
  - julia -e 'using DeformableRegistration; @assert isdefined(:DeformableRegistration); @assert typeof(DeformableRegistration) === Module'
  - julia --code-coverage ./test/runtests.jl
after_success:
- julia -e 'cd(Pkg.dir("DeformableRegistration")); Pkg.add("Coverage"); using Coverage; Coveralls.submit(Coveralls.process_folder())'
